<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:local="clr-namespace:ModernWpf"
	xmlns:ctrl="clr-namespace:ModernWpf.Controls"
    xmlns:conv="clr-namespace:ModernWpf.Converters"
    >
    <Style TargetType="{x:Type ctrl:BorderWindow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:BorderWindow}">
                    <Canvas Background="#01000000">
                        <Line x:Name="Line1" 
                              RenderOptions.EdgeMode="Aliased" 
                              StrokeThickness="1" 
                              Stroke="{TemplateBinding BorderBrush}" 
                              SnapsToDevicePixels="True">
                            <Line.Effect>
                                <DropShadowEffect ShadowDepth="1.5" 
                                                  Direction="{Binding Side, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static conv:EnumValueConverter.Instance}}" 
                                                  BlurRadius="{Binding PadSize, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Color="{Binding Path=BorderBrush.Color, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Opacity="{Binding Path=GlowOpacity, RelativeSource={RelativeSource TemplatedParent}}"></DropShadowEffect>
                            </Line.Effect>
                        </Line>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Side" Value="Left">
                            <Setter TargetName="Line1" Property="Y2" Value="{Binding BorderLength, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                            <Setter TargetName="Line1" Property="Canvas.Left" Value="{Binding PadSize, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                            <Setter TargetName="Line1" Property="Canvas.Top" Value="{Binding PadSize, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                        </Trigger>

                        <Trigger Property="Side" Value="Top">
                            <Setter TargetName="Line1" Property="X2" Value="{Binding BorderLength, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                            <Setter TargetName="Line1" Property="Canvas.Top" Value="{Binding PadSize, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                            <Setter TargetName="Line1" Property="Canvas.Left" Value="{Binding PadSize, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                        </Trigger>

                        <Trigger Property="Side" Value="Right">
                            <Setter TargetName="Line1" Property="Y2" Value="{Binding BorderLength, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                            <Setter TargetName="Line1" Property="Canvas.Top" Value="{Binding PadSize, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                        </Trigger>

                        <Trigger Property="Side" Value="Bottom">
                            <Setter TargetName="Line1" Property="X2" Value="{Binding BorderLength, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                            <Setter TargetName="Line1" Property="Canvas.Left" Value="{Binding PadSize, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="MarlettGlyph" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Marlett"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="ControlButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="Padding" Value="9 5 9 6" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ButtonContent" RecognizesAccessKey="False"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#40dddddd" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#60dddddd" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ctrl:TitleBar}">
        <Setter Property="local:Chrome.HitTestType" Value="Caption"></Setter>
        <Setter Property="Margin" Value="0 0 0 0"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:TitleBar}">
                    <Border Background="#01000000"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid UseLayoutRounding="True" x:Name="layout"
                              Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <!--icon-->
                            <ctrl:AppIconImage x:Name="Part_Icon" Margin="6 0 0 0"
                                               LargeIcon="{TemplateBinding LargeIcon}"
                                               local:Chrome.HitTestType="SystemMenu"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor"></ctrl:AppIconImage>

                            <!--title-->
                            <TextBlock Grid.Column="1" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RootWindow.Title}"
                                       VerticalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       TextTrimming="CharacterEllipsis"
                                       x:Name="Part_Title"
                                       Margin="6 5"></TextBlock>
                            
                            <!--custom content-->
                            <ContentPresenter Grid.Column="2"
                                              Content="{TemplateBinding Content}"
                                              local:Chrome.HitTestType="Client"></ContentPresenter>

                            <!--control boxes-->
                            <StackPanel Orientation="Horizontal"
                                        Grid.Column="3"
                                        x:Name="Part_ControlBox"
                                        VerticalAlignment="Stretch"
                                        local:Chrome.HitTestType="Client">
                                <Button x:Name="PART_MinButton"
                                        Style="{StaticResource ControlButton}">
                                    <TextBlock Text="0" Style="{StaticResource MarlettGlyph}"></TextBlock>
                                </Button>
                                <Button x:Name="PART_MaxButton"
                                        Style="{StaticResource ControlButton}">
                                    <TextBlock Text="1" Style="{StaticResource MarlettGlyph}"></TextBlock>
                                </Button>
                                <Button x:Name="PART_RestoreButton"
                                        Style="{StaticResource ControlButton}">
                                    <TextBlock Text="2" Style="{StaticResource MarlettGlyph}"></TextBlock>
                                </Button>
                                <Button x:Name="PART_CloseButton">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource ControlButton}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#e00000" />
                                                    <Setter Property="Foreground" Value="#ffffff" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="#c00000" />
                                                    <Setter Property="Foreground" Value="#dddddd" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <TextBlock Text="r" Style="{StaticResource MarlettGlyph}"></TextBlock>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowIcon" Value="False">
                            <Setter TargetName="Part_Icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ShowTitle" Value="False">
                            <Setter TargetName="Part_Title" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ShowControlBox" Value="False">
                            <Setter TargetName="Part_ControlBox" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActiveBackground}"></Setter>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=AtiveForeground}"></Setter>
            </Trigger>
            <Trigger Property="IsActive" Value="False">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=InativeBackground}"></Setter>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=InativeForeground}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
