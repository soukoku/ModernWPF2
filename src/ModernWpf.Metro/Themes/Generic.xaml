<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="clr-namespace:ModernWpf.Metro.Controls"
    xmlns:modern="http://modernwpf">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ModernWpf.Metro;component/Themes/BaseValues.xaml"/>
        <ResourceDictionary Source="/ModernWpf.Metro;component/Themes/ColorLight.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <Style TargetType="ctrl:AnimatedContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:AnimatedContentControl">
                    <Border x:Name="root">
                        <ContentPresenter x:Name="PART_Content" 
                                          Cursor="{TemplateBinding Cursor}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ctrl:Flyout">
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ModernBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:Flyout">
                    <Border Background="{TemplateBinding Background}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ctrl:FlyoutContainer">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource OverlayBackground}"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:FlyoutContainer">
                    <Border Background="{TemplateBinding Background}"
                            KeyboardNavigation.TabNavigation="Cycle"
                            KeyboardNavigation.ControlTabNavigation="Cycle"
                            KeyboardNavigation.DirectionalNavigation="Cycle"
                            Opacity="0"
                            x:Name="PART_Overlay">
                        <ContentPresenter x:Name="PART_Content" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="WhateverStates">
                                <VisualState x:Name="IsClosed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.25" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"></DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation To="0" Storyboard.TargetProperty="Opacity" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IsOpen">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"></DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation To="1" Storyboard.TargetProperty="Opacity" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.25" To="IsOpen">
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0:0:0.25" To="IsClosed">
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HasDialogOpen" Value="True">
                <Setter Property="IsHitTestVisible" Value="True"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
